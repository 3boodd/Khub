/* Code Font */
@import url("https://cdn.jsdelivr.net/gh/tonsky/FiraCode@master/distr/fira_code.css");

code,
#bd-customcss-editor,
#bd-customcss-editor-detached {
  font-family: "Fira Code", monospace !important;
}

/* Language Identifiers */
/* code::before {
	display: block;
	margin-bottom: 7px;
	padding-top: 7px;
	padding-bottom: 7px;
	font-weight: 900;
	width: calc(100% - 2px);
	text-align: center;
	background-color: var(--background-primary);
	border: 1px solid var(--background-tertiary);
	filter: drop-shadow(0px 0px 1px black);
	border-radius: 2px;
}

code[class$="hljs apache"i]::before {
	content: "Apache";
}
code[class$="hljs bash::before"i], code[class$="hljs sh"i]::before {
	content: "Bash";
}
code[class$="hljs bat"i]::before {
	content: "Batch";
}
code[class$="hljs bf::before"i], code[class$="hljs brainfuck"i]::before {
	content: "Brainfuck";
}
code[class$="hljs coffeescript"i]::before, code[class$="hljs cs"i]::after {
	content: "CoffeeScript";
}
code[class$="hljs c"i]::before {
	content: "C";
}
code[class$="hljs cpp"i]::before {
	content: "C++";
}
code[class$="hljs csharp"i]::before {
	content: "C#";
}
code[class$="hljs css"i]::before {
	content: "Cascading Style Sheets [CSS]";
}
code[class$="hljs diff"i]::before {
	content: "Diff";
}
code[class$="hljs go"i]::before {
	content: "Go";
}
code[class$="hljs http"i]::before {
	content: "Hypertext Transfer Protocol [HTTP]";
}
code[class$="hljs toml"i]::before {
	content: "Tom's Obvious, Minimal Language [TOML]";
}
code[class$="hljs ini"i]::before {
	content: "Initialization [INI]";
}
code[class$="hljs java"i]::before {
	content: "Java";
}
code[class$="hljs javascript::before"i], code[class$="hljs js"i]::before {
	content: "JavaScript";
}
code[class$="hljs json"i]::before {
	content: "JavaScript Object Notation [JSON]";
}
code[class$="hljs kotlin"i]::before {
	content: "Kotlin";
}
code[class$="hljs less"i]::before {
	content: "Leaner Style Sheets [LESS]";
}
code[class$="hljs lua"i]::before {
	content: "Lua";
}
code[class$="hljs makefile"i]::before {
	content: "Makefile";
}
code[class$="hljs md::before"i], code[class$="hljs markdown"i]::before {
	content: "Markdown";
}
code[class$="hljs nginx"i]::before {
	content: "Nginx";
}
code[class$="hljs objectivec::before"i], code[class$="hljs objc"i]::before {
	content: "Objective-C";
}
code[class$="hljs perl"i]::before {
	content: "Perl";
}
code[class$="hljs php"i]::before {
	content: "PHP: Hypertext Preprocessor";
}
code[class$="hljs plaintext"i]::before {
	content: "Plaintext";
}
code[class$="hljs properties"i]::before {
	content: "Properties";
}
code[class$="hljs py::before"i], code[class$="hljs python"i]::before {
	content: "Python";
}
code[class$="hljs ruby"i]::before {
	content: "Ruby";
}
code[class$="hljs rust"i]::before {
	content: "Rust";
}
code[class$="hljs sass"i]::before {
	content: "Syntactically Awesome Stylesheets [SASS]";
}
code[class$="hljs scss"i]::before {
	content: "Sassy Cascading Stylesheets [SCSS]";
}
code[class$="hljs shell"i]::before {
	content: "Shell Session";
}
code[class$="hljs sql"i]::before {
	content: "Structured Query Language [SQL]";
}
code[class$="hljs swift"i]::before {
	content: "Swift";
}
code[class$="hljs ts::before"i], code[class$="hljs typescript"i]::before {
	content: "TypeScript";
}
code[class$="hljs html"i]::before {
	content: "Hypertext Markup Language [HTML]";
}
code[class$="hljs xml"i]::before {
	content: "Extensible Markup Language [XML]";
}
code[class$="hljs yaml"i]::before {
	content: "YAML Ain't Markup Language";
} */